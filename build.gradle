plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.github.krezerenko'
//version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.register("wipeDatabase", Delete) {
	delete "postgres/data/pgdata"
}

tasks.register("dockerBuild", Exec) {
	dependsOn tasks.named("dockerStop")
	commandLine "docker", "build", "-t", "restapi", "."
}

tasks.register("dockerStart", Exec) {
	dependsOn tasks.named("build")
	commandLine "docker", "compose", "up", "-d"
}

tasks.register("dockerStop", Exec) {
	commandLine "docker", "compose", "down"
}

tasks.named("build") {
	finalizedBy tasks.named("dockerBuild")
}

tasks.named('test', Test) {
//	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}

	// For configuration cache compatibility
	systemProperty 'user.timezone', providers.systemProperty('user.timezone').getOrElse('UTC')
}
